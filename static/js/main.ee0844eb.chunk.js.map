{"version":3,"sources":["components/FruitCard/index.js","components/Title/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FruitCard","props","className","onClick","cardClick","id","src","image","alt","name","Title","currentScore","topScore","children","Wrapper","App","state","fruits","shuffleCards","i","length","j","Math","floor","random","temp","console","log","setState","tempFruits","won","newScore","clickedID","parseInt","newImageArr","map","item","clicked","alert","newGameArr","newTopScore","this","fruit","key","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee0844eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction FruitCard(props) {\r\n    return (\r\n        \r\n        <div className=\"card\" onClick={()=> props.cardClick(props.id)}>\r\n            <div className=\"img-container\">\r\n                <img src={props.image} alt={props.name}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FruitCard;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction Title(props) {\r\n    return (\r\n\r\n        <div>\r\n            <nav className=\"nav navbar-expand-lg\">\r\n                <div className=\"display\">\r\n                    <h1 className=\"title\">Fruit Salad</h1>\r\n                    <h4>Try to click all of the fruits in the bowl, but don't click the same fruit twice!</h4>\r\n                </div>\r\n            </nav>\r\n            <div className=\"scores\">\r\n                <span><p className=\"lead\">Score: {props.currentScore} </p>\r\n                <p className=\"lead\">Top Score: {props.topScore}</p></span>\r\n            </div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport \"./style.css\"\r\n\r\nfunction Wrapper(props){\r\n    return <div className=\"wrapper\">\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default Wrapper","import React, { Component } from \"react\";\nimport fruits from \"./fruits.json\"\nimport FruitCard from \"./components/FruitCard/index\"\nimport Title from \"./components/Title/index\"\nimport Wrapper from \"./components/Wrapper/index\"\n\nclass App extends Component {\n\n  state = {\n    fruits,\n    currentScore: 0,\n    topScore: 0\n  };\n\n  shuffleCards = () => {\n    for (let i = this.state.fruits.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1))\n      const temp = this.state.fruits[i]\n      console.log(temp)\n      fruits[i] = fruits[j]\n      fruits[j] = temp\n      console.log(temp)\n      this.setState({ fruits: fruits })\n    }\n  }\n\n  cardClick = (id) => {\n    console.log(\"clicked a fruit!\")\n\n    let j = 0\n    let temp\n    let tempFruits = this.state.fruits\n\n    for (let i = this.state.fruits.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1))\n      temp = tempFruits[i]\n      console.log(temp)\n      tempFruits[i] = tempFruits[j]\n      tempFruits[j] = temp\n      console.log(temp)\n      this.setState({ fruits: fruits })\n    }\n\n    let won = true;\n\n    let newScore = this.state.currentScore;\n    const clickedID = parseInt(id);\n\n    const newImageArr = this.state.fruits.map(item => {\n      if (item.id === clickedID) {\n        if (item.clicked === true) {\n          won = false\n        }\n        else {\n          item.clicked = true;\n          newScore = this.state.currentScore + 1;\n        }\n      }\n      return item;\n    });\n\n    if (won === true && newScore === 12) {\n      alert(\"YOU WON!\")\n\n      this.setState({\n        currentScore: 0,\n        topScore: 12,\n        fruits: newImageArr\n      })\n\n    } else if (won === true) {\n      this.setState({\n        fruits: newImageArr,\n        currentScore: newScore\n      }, () => {\n        console.log('current score: ', this.state.currentScore)\n      })\n    } else {\n      alert(\"YOU FAILED\")\n      const newGameArr = this.state.fruits.map(item => {\n        item.clicked = false\n        return item\n      })\n\n      var newTopScore = this.state.topScore\n\n      if (this.state.currentScore > this.state.topScore) {\n        newTopScore = this.state.currentScore\n      };\n\n      this.setState({\n        currentScore: 0,\n        topScore: newTopScore,\n        fruits: newGameArr\n      });\n    };\n    console.log(\"clicked id: \", id)\n  };\n\n  render() {\n    return (\n\n      <div>\n        <Title\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n\n        <Wrapper>\n          {this.state.fruits.map((fruit) => (\n            <FruitCard key={fruit.id}\n              name={fruit.name}\n              image={fruit.image}\n              id={fruit.id}\n              cardClick={this.cardClick}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    )\n  };\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}